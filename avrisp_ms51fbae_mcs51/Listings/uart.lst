C51 COMPILER V9.60.0.0   UART                                                              01/31/2023 15:30:38 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\uart.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE uart.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\ws51fbae_test) DEBUG OBJECTEXT
                    -END PRINT(.\Listings\uart.lst) OBJECT(.\Objects\uart.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* SPDX-License-Identifier: Apache-2.0                                                                    
             - */
   4          /* Copyright(c) 2020 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   5          /*                                                                                                        
             - */
   6          /*--------------------------------------------------------------------------------------------------------
             --*/
   7          
   8          /*********************************************************************************************************
             -**/
   9          /*  Website: http://www.nuvoton.com                                                                       
             - */
  10          /*  E-Mail : MicroC-8bit@nuvoton.com                                                                      
             - */
  11          /*  Date   : Jan/21/2020                                                                                  
             - */
  12          /*********************************************************************************************************
             -**/
  13          #include "MS51_16K.H"
  14          bit PRINTFG = 0, uart0_receive_flag = 0, uart1_receive_flag;
  15          unsigned char uart0_receive_data, uart1_receive_data;
  16          
  17          
  18          
  19          void Serial_ISR(void) interrupt 4
  20          {
  21   1          _push_(SFRS);
  22   1        
  23   1          if (RI)
  24   1          {
  25   2              uart0_receive_flag = 1;
  26   2              uart0_receive_data = SBUF;
  27   2              clr_SCON_RI;                                         // Clear RI (Receive Interrupt).
  28   2          }
  29   1      
  30   1          if (TI)
  31   1          {
  32   2              if (!PRINTFG)
  33   2              {
  34   3                  TI = 0;
  35   3              }
  36   2          }
  37   1      
  38   1          _pop_(SFRS);
  39   1      }       
  40          
  41          
  42          
  43          void SerialPort1_ISR(void) interrupt 15
C51 COMPILER V9.60.0.0   UART                                                              01/31/2023 15:30:38 PAGE 2   

  44          {
  45   1          _push_(SFRS);
  46   1        
  47   1          if (RI_1)
  48   1          {
  49   2              uart1_receive_data = SBUF_1;
  50   2              uart1_receive_flag = 1;
  51   2              clr_SCON_1_RI_1;                             /* clear reception flag for next reception */
  52   2          }
  53   1      
  54   1          if (TI_1 == 1)
  55   1          {
  56   2              if (!PRINTFG)
  57   2              {
  58   3                  clr_SCON_1_TI_1;                             /* if emission occur */
  59   3              }
  60   2          }
  61   1      
  62   1          _pop_(SFRS);
  63   1      }
  64          
  65          /*MS51 new version buadrate */
  66          void UART_Open(unsigned long u32SysClock, unsigned char u8UARTPort,unsigned long u32Baudrate)
  67          {
  68   1        switch(u8UARTPort)
  69   1        {
  70   2          case UART0_Timer1:
  71   2                SCON = 0x50;       //UART0 Mode1,REN=1,TI=1
  72   2                TMOD |= 0x20;      //Timer1 Mode1
  73   2                set_PCON_SMOD;          //UART0 Double Rate Enable
  74   2                set_CKCON_T1M;
  75   2                clr_T3CON_BRCK;          //Serial port 0 baud rate clock source = Timer1
  76   2                TH1 = 256 - (u32SysClock/16/u32Baudrate);
  77   2                set_TCON_TR1;
  78   2            break;
  79   2            
  80   2            case UART0_Timer3:
  81   2                SCON = 0x50;     //UART0 Mode1,REN=1,TI=1
  82   2                set_PCON_SMOD;        //UART0 Double Rate Enable
  83   2                T3CON &= 0xF8;   //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1)
  84   2                set_T3CON_BRCK;        //UART0 baud rate clock source = Timer3
  85   2                RH3    = HIBYTE(65536 - (u32SysClock/16/u32Baudrate));  
  86   2                RL3    = LOBYTE(65536 - (u32SysClock/16/u32Baudrate));  
  87   2                set_T3CON_TR3;         //Trigger Timer3
  88   2            break;
  89   2            
  90   2            case UART1_Timer3:
  91   2                SCON_1 = 0x50;     //UART1 Mode1,REN_1=1,TI_1=1
  92   2                T3CON = 0x80;     //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1), UART1 in MODE 1
  93   2                RH3    = HIBYTE(65536 - (u32SysClock/16/u32Baudrate));  
  94   2                RL3    = LOBYTE(65536 - (u32SysClock/16/u32Baudrate));     
  95   2                set_T3CON_TR3;             //Trigger Timer3                                                     
             -        
  96   2            break; 
  97   2        }
  98   1      }
  99          
 100          #if 0 
              unsigned char Receive_Data(unsigned char UARTPort)
              {
                  UINT8 c;
                  switch (UARTPort)
C51 COMPILER V9.60.0.0   UART                                                              01/31/2023 15:30:38 PAGE 3   

                  {
                    case UART0:
                      while (!RI);
                      c = SBUF;
                      RI = 0;
                    break;
                    case UART1:
                      while (!RI_1);
                      c = SBUF_1;
                      RI_1 = 0;
                    break;
                  }
                  return (c);
              }
              #endif
 120          
 121          void UART_Send_Data(UINT8 UARTPort, UINT8 c)
 122          {
 123   1          switch (UARTPort)
 124   1          {
 125   2            case UART0:
 126   2              SBUF = c;
 127   2            break;
 128   2            case UART1:
 129   2              SBUF_1 = c;
 130   2            break;
 131   2          }
 132   1      }
 133          
 134          void Enable_UART0_VCOM_printf_24M_115200(void)
 135          {
 136   1          P06_QUASI_MODE;
 137   1          UART_Open(24000000,UART0_Timer1,115200);
 138   1          ENABLE_UART0_PRINTF;
 139   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    348    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
